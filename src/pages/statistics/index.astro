---
import Base from "@/layouts/Base.astro";
import { getArticles } from "@/lib/article";
import RecordCard, { type RecordType } from "@/components/RecordCard.astro";
import dayjs from "dayjs";

const articles = getArticles();
const publishedArticles = getArticles({ isPublished: true });
const runnersWithDuplicate = articles.map((article) => article.githubUser);
const runners = [...new Set(runnersWithDuplicate)];
const runnersWithCount = runners.map((runner) => {
  return {
    name: runner,
    count: runnersWithDuplicate.filter((r) => r === runner).length,
  };
});

const records: RecordType[] = [
  {
    title: "総記事数",
    records: [articles.length],
    unit: "本",
  },
  {
    title: "総公開記事数",
    records: [publishedArticles.length],
    unit: "本",
  },
  {
    title: "総ランナー数",
    records: [runners.length],
    unit: "人",
  },
  {
    title: "平均投稿数",
    records: [Math.round((articles.length / runners.length) * 100) / 100],
    unit: "本/人",
  },
  {
    title: "最多投稿者",
    records: [
      ...runnersWithCount.filter(
        (runner) =>
          runner.count ===
          Math.max(...runnersWithCount.map((runner) => runner.count)),
      ),
    ].map((runner) => runner.name),
    unit: "さん",
    noDegitHighlight: true,
  },
  {
    title: "経過日数",
    records: [
      dayjs(publishedArticles.at(-1)?.date).diff(
        dayjs(publishedArticles[0].date),
        "day",
      ),
    ],
    unit: "日",
  },
];
---

<Base slug="statistics" title="Vim駅伝 - 統計">
  <h2 class="my-5 w-full text-center font-ekiden-heading text-4xl">統計</h2>
  <div class="my-5 flex flex-col gap-3 pb-10">
    {
      records.map((record) => (
        <RecordCard
          title={record.title}
          records={record.records}
          unit={record.unit}
          noDegitHighlight={record.noDegitHighlight}
        />
      ))
    }
  </div>
</Base>
